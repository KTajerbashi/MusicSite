@model DAL.ViewModels.ViewSong

<div class="col-sm-12 col-md-4 h-100 ">
    <div class=" d-flex flex-column justify-content-start align-items-center">
        <img src="~/Files/Photos/@Model.Picture" class="shadow" id="header-img" />
        <div class="my-5 text-dark">
            <h6>@Model.SingerName</h6>
            <h5>@Model.SongName</h5>
        </div>
        <div class="d-flex flex-row justify-content-between align-items-center w-100 mt-3">
            <span id="endTime" class="text-light" style="font-size: 14px;">00:00</span>
            <span id="durTime" class="text-light" style="font-size: 14px;">00:00</span>
        </div>
        <div id="Progress-Container">
            <div id="Progress"></div>
            <audio id="audioIndex" src="~/Files/Musics/@Model.AddressFile"></audio>
        </div>
        <div id="Controller-Container" class="m-2 px-2 d-flex flex-row justify-content-around align-items-center w-100">
            <i class="fa fa-forward header-music-controller"></i>
            <i class="fa fa-step-forward header-music-controller"></i>
            <i onclick="Stop()" class="fa fa-stop header-music-controller"></i>
            <i id="playBtn" class="fa fa-play header-music-controller"></i>
            <i class="fa fa-step-backward header-music-controller"></i>
            <i class="fa fa-backward header-music-controller"></i>
        </div>
        @{
            int score = (Model.Score * 100) / (Model.Visit * 5);
        }
        <div id="SetInfo" class="d-flex flex-row justify-content-between align-items-center w-100">
            <div>
                <div data-score="@Model.Score" class="" style="width: @(score)% !important; overflow-x: hidden;">
                    <div class="d-flex flex-row justify-content-start align-items-center my-3">
                        <i class="fa fa-star" style="font-size: 1.3rem;"></i>
                        <i class="fa fa-star" style="font-size: 1.5rem;"></i>
                        <i class="fa fa-star" style="font-size: 1.6rem;"></i>
                        <i class="fa fa-star" style="font-size: 1.8rem;"></i>
                        <i class="fa fa-star" style="font-size: 2rem;"></i>
                    </div>
                </div>
            </div>
            <button class="btn btn-warning text-dark" data-id="@Model.SongId" id="OpenComment"><i class="fa fa-comment" style="font-size: 2rem;"></i></button>
        </div>
    </div>
</div>

<script>
    let play = document.getElementById("playBtn");
    let durTime = document.getElementById("durTime");
    let endTime = document.getElementById("endTime");
    let IsPlay = false;
    let ProgressContainer = document.getElementById("Progress-Container");
    let Progress = document.getElementById("Progress");
    let audioIndex = document.getElementById("audioIndex");
    play.addEventListener("click", () => {
        if (IsPlay) {
            play.classList.remove("fa-pause");
            play.classList.add("fa-play");
            IsPlay = false;
            Pause();
        } else {
            play.classList.remove("fa-play");
            play.classList.add("fa-pause");
            IsPlay = true;
            loadSong();
        }
    });
    function Stop() {
        play.classList.remove("fa-pause");
        play.classList.add("fa-play");
        IsPlay = false;
        audioIndex.pause();
        audioIndex.currentTime = 0;
    }
    function Pause() {
        audioIndex.pause();
    }
    function GetTime(sec) {
        let Time = 0;
        let Minute = Math.floor(sec / 60);
        let Second = Math.floor(sec - (Minute * 60));
        if (Minute < 10) {
            if (Second < 10) {
                Time = `0${Minute}:0${Second}`;
            } else {
                Time = `0${Minute}:${Second}`;
            }
        } else {
            if (Second < 10) {
                Time = `${Minute}:0${Second}`;
            } else {
                Time = `${Minute}:${Second}`;
            }
        }
        return Time;
    }
    function UpdateTimer() {
        let Time = GetTime(audioIndex.currentTime);
        let progressPercent = (audioIndex.currentTime / audioIndex.duration) * 100;
        Progress.style.width = progressPercent + "%";
        durTime.innerHTML = Time;
    }
    function setProgress(e) {
        const width = this.clientWidth;
        const clickX = e.offsetX;
        const duration = audioIndex.duration;
        audioIndex.currentTime = (clickX / width) * duration;
    }
    function loadSong() {
        audioIndex.play();
        Progress.style.width = 0 + "%";
        endTime.innerHTML = GetTime(audioIndex.duration);
        ProgressContainer.addEventListener('click', setProgress);
        audioIndex.addEventListener("timeupdate", UpdateTimer);
        setTimeout(function () {
            durTime.innerHTML = GetTime(audioIndex.duration);
        }, 1000);
    }
</script>